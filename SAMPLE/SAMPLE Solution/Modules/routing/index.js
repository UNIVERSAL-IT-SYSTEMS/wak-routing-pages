var projectTargetsFile = File(application.getFolder().path+'targets.json');var solutionTargetsFile = File(application.getFolder().path+'targets.json');var defaultTargetsFile = File(solution.getWalibFolder().path + 'WAF/routing/targets.json');		var projectTargets = (function(){	if(projectTargetsFile.exists){		try{			return JSON.parse(loadText(projectTargetsFile));		}catch(e){				}	}})();var solutionTargets = (function(){	if(projectTargets){		return projectTargets;	}	if(solutionTargetsFile.exists){		try{			return JSON.parse(loadText(solutionTargetsFile));		}catch(e){				}	}})();var targets = (function(){	if(solutionTargets){		return solutionTargets;	}			if(defaultTargetsFile.exists){		try{			return JSON.parse(loadText(defaultTargetsFile));		}catch(e){				}	}})();function Target(name, suffix, touch, resolution, include, exclude){	this['name'] = name ? name : '';		this['suffix'] = suffix ? suffix : '';	this['touch'] = !!touch;	this['resolution'] = resolution ? resolution : '';//	this['background-landscape'] = '';		//	this['background-portrait'] = '';		this['rules'] = [{		'include':Array.isArray(include) ? include : include ? include.toString() : '',		'exclude':Array.isArray(exclude) ? exclude : exclude ? exclude.toString() : ''			}];			}var create = (function(){	function F(args){        return Target.apply(this, args);    }	F.prototype = Target.prototype;	return function(){		return new F(arguments);	}})();function append(){			if(targets){		for(var i = 0;i < targets.length;++i){			if(targets[i].name === arguments[0]){				targets.splice(i, 1);				break;			}		}				targets.push(create.apply(targets, arguments));		if(solutionTargets){			saveText(JSON.stringify(targets), solutionTargetsFile);			}else{			saveText(JSON.stringify(targets), projectTargetsFile);		}				return targets;	}}exports.append = append;exports.targets = targets;